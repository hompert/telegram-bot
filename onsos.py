import telebot
import random
import time
import json
import os

# –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7880474922:AAH8vQtpPvruTqltYQANnC54ZG6JxmBY_vM'
bot = telebot.TeleBot(TOKEN)

# –§–∞–π–ª –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_FILE = 'bot_data.json'

# –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –º–µ–∂–¥—É –ø–æ–¥–æ—è–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (5 –º–∏–Ω—É—Ç)
COOLDOWN_SECONDS = 5 * 60

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ö–∞–∑–∏–Ω–æ ---
CASINO_SYMBOLS = ['üçí', 'üçã', 'üçá', 'üîî', 'üíé', '7Ô∏è‚É£']
# –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –º–µ–∂–¥—É –∏–≥—Ä–∞–º–∏ –≤ –∫–∞–∑–∏–Ω–æ (30 —Å–µ–∫—É–Ω–¥)
CASINO_COOLDOWN_SECONDS = 30 

# –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –≤—ã–∏–≥—Ä—ã—à–∞
CASINO_PAYOUTS = {
    ('7Ô∏è‚É£', '7Ô∏è‚É£', '7Ô∏è‚É£'): 10,  # –î–∂–µ–∫–ø–æ—Ç
    ('üíé', 'üíé', 'üíé'): 5,   # –í—ã—Å–æ–∫–∏–π –≤—ã–∏–≥—Ä—ã—à
    ('üîî', 'üîî', 'üîî'): 3,   # –°—Ä–µ–¥–Ω–∏–π –≤—ã–∏–≥—Ä—ã—à
    ('üçí', 'üçí', 'üçí'): 2,   # –í—ã–∏–≥—Ä—ã—à –ø–æ —Ñ—Ä—É–∫—Ç–∞–º
    ('üçã', 'üçã', 'üçã'): 2,
    ('üçá', 'üçá', 'üçá'): 2,
    # –í—ã–∏–≥—Ä—ã—à–∏ –∑–∞ –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (–±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞, –Ω–æ –º–æ–∂–Ω–æ —É–ø—Ä–æ—Å—Ç–∏—Ç—å)
    # –ó–¥–µ—Å—å —É–ø—Ä–æ—â–µ–Ω–æ: –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –ø–æ—Å–ª–µ —Ç—Ä–µ—Ö
}

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö ---
def load_data():
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r', encoding='utf-8') as f:
            try:
                data = json.load(f)
                # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
                if 'last_milk_time_cow' not in data:
                    data['last_milk_time_cow'] = {}
                if 'last_milk_time_bull' not in data:
                    data['last_milk_time_bull'] = {}
                if 'last_casino_time' not in data: # –ù–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –∫–∞–∑–∏–Ω–æ
                    data['last_casino_time'] = {}
                if 'user_inventories' not in data:
                    data['user_inventories'] = {}
                if 'user_display_names' not in data:
                    data['user_display_names'] = {}

                # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω–æ–≤—ã–µ –ø–æ–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏ –æ–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ä—ã–µ
                for user_id in data['user_inventories']:
                    inventory = data['user_inventories'][user_id]
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª—è –Ω–∞ –Ω–æ–≤—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                    if 'won_deposits' in inventory: # –≠—Ç–æ —Å—Ç–∞—Ä—ã–µ –ª–∏—Ç—Ä—ã –≤—ã–∏–≥—Ä—ã—à–∞
                        inventory['casino_wins'] = 0 # –û–±–Ω—É–ª—è–µ–º –∏–ª–∏ –ø—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                        del inventory['won_deposits']
                    if 'lost_deposits' in inventory: # –≠—Ç–æ —Å—Ç–∞—Ä—ã–µ –ª–∏—Ç—Ä—ã –ø—Ä–æ–∏–≥—Ä—ã—à–∞
                        inventory['casino_losses'] = 0 # –û–±–Ω—É–ª—è–µ–º –∏–ª–∏ –ø—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
                        del inventory['lost_deposits']
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è
                    if 'casino_deposits' not in inventory:
                        inventory['casino_deposits'] = 0 
                    if 'casino_wins' not in inventory:
                        inventory['casino_wins'] = 0
                    if 'casino_losses' not in inventory:
                        inventory['casino_losses'] = 0
                    if 'casino_games_played' not in inventory:
                        inventory['casino_games_played'] = 0 
                return data
            except json.JSONDecodeError:
                print(f"–í–Ω–∏–º–∞–Ω–∏–µ: –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON —Ñ–∞–π–ª–∞ '{DATA_FILE}'. –í–æ–∑–º–æ–∂–Ω–æ, —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö.")
                return {
                    'last_milk_time_cow': {},
                    'last_milk_time_bull': {},
                    'last_casino_time': {}, # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ
                    'user_inventories': {},
                    'user_display_names': {}
                }
    print(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö '{DATA_FILE}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞—é –Ω–æ–≤—ã–π.")
    return {
        'last_milk_time_cow': {},
        'last_milk_time_bull': {},
        'last_casino_time': {}, # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–¥–µ—Å—å
        'user_inventories': {},
        'user_display_names': {}
    }

def save_data(data):
    try:
        with open(DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=4, ensure_ascii=False)
    except IOError as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
bot_data = load_data()

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ---
def update_user_display_name(user_id, user_obj):
    current_display_name = bot_data['user_display_names'].get(user_id)
    new_display_name = ""

    if user_obj.username:
        new_display_name = "@" + user_obj.username
    elif user_obj.first_name:
        new_display_name = user_obj.first_name
        if user_obj.last_name:
            new_display_name += " " + user_obj.last_name
    else:
        new_display_name = "[–°–∫—Ä—ã—Ç—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"

    if current_display_name != new_display_name:
        bot_data['user_display_names'][user_id] = new_display_name
        save_data(bot_data) # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        print(f"–û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {new_display_name}") # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = str(message.from_user.id)
    update_user_display_name(user_id, message.from_user)

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç, —Ñ–µ—Ä–º–µ—Ä! ü§† –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –¥–µ–Ω—å –Ω–∞ —Ñ–µ—Ä–º–µ?\n\n"
        "üêÑ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /milk_cow, —á—Ç–æ–±—ã –ø–æ–¥–æ–∏—Ç—å —Å–≤–æ—é –º–∏–ª—É—é –∫–æ—Ä–æ–≤—É –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–µ–∂–µ–µ –º–æ–ª–æ–∫–æ.\n"
        "üêÇ –ê –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø–æ—Å–º–µ–ª–µ–µ ‚Äì /milk_bull, —á—Ç–æ–±—ã '–ø–æ–¥–æ–∏—Ç—å' –±—ã–∫–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω–Ω—É—é —Å–ø–µ—Ä–º—É!\n"
        "üé∞ –ü–æ–ø—Ä–æ–±—É–π —É–¥–∞—á—É –≤ –∫–∞–∑–∏–Ω–æ! –°—Ç–∞–≤—å –º–æ–ª–æ–∫–æ —Å –ø–æ–º–æ—â—å—é /casino <—Å—É–º–º–∞>.\n"
        "üì¶ –ê —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –¥–æ–±—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É–π /inventory.\n"
        "üèÜ –ü–æ—Å–º–æ—Ç—Ä–∏, –∫—Ç–æ –∫—Ä—É—á–µ –≤—Å–µ—Ö ‚Äì /leaders!"
    )
    bot.reply_to(message, welcome_text)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /milk_cow ---
@bot.message_handler(commands=['milk_cow'])
def milk_cow(message):
    user_id = str(message.from_user.id)
    update_user_display_name(user_id, message.from_user)

    current_time = time.time()

    if user_id in bot_data['last_milk_time_cow']:
        time_since_last_milk = current_time - bot_data['last_milk_time_cow'][user_id]
        if time_since_last_milk < COOLDOWN_SECONDS:
            remaining_time = int(COOLDOWN_SECONDS - time_since_last_milk)
            minutes = remaining_time // 60
            seconds = remaining_time % 60
            bot.reply_to(message, f"–û–π-–æ–π! üòÖ –í–∞—à–∞ –∫–æ—Ä–æ–≤–∞ –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–¥–æ—é. –ï–π –Ω—É–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –µ—â–µ {minutes} –º–∏–Ω {seconds} —Å–µ–∫.")
            return

    bot_data['last_milk_time_cow'][user_id] = current_time

    milk_amount = random.randint(0, 15)

    if user_id not in bot_data['user_inventories']:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
        bot_data['user_inventories'][user_id] = {'milk': 0, 'sperm': 0, 'casino_deposits': 0, 'casino_wins': 0, 'casino_losses': 0, 'casino_games_played': 0}
    bot_data['user_inventories'][user_id]['milk'] += milk_amount

    save_data(bot_data)

    if milk_amount > 10:
        bot.reply_to(message, f"–£—Ä–∞! üéâ –í—ã –ø–æ–¥–æ–∏–ª–∏ –∫–æ—Ä–æ–≤—É –∏ –ø–æ–ª—É—á–∏–ª–∏ —Ü–µ–ª—ã—Ö {milk_amount} –ª–∏—Ç—Ä–æ–≤ —Å–≤–µ–∂–∞–π—à–µ–≥–æ –º–æ–ª–æ–∫–∞! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, —Ñ–µ—Ä–º–µ—Ä!")
    elif milk_amount > 0:
        bot.reply_to(message, f"–í—ã –ø–æ–¥–æ–∏–ª–∏ –∫–æ—Ä–æ–≤—É –∏ –ø–æ–ª—É—á–∏–ª–∏ {milk_amount} –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞. –ù–µ–ø–ª–æ—Ö–æ! ü•õ")
    else:
        bot.reply_to(message, f"–•–º... ü§® –í—ã –ø–æ–¥–æ–∏–ª–∏ –∫–æ—Ä–æ–≤—É, –Ω–æ –æ–Ω–∞ –¥–∞–ª–∞ –≤—Å–µ–≥–æ {milk_amount} –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞. –ú–æ–∂–µ—Ç, –ø–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /milk_bull ---
@bot.message_handler(commands=['milk_bull'])
def milk_bull(message):
    user_id = str(message.from_user.id)
    update_user_display_name(user_id, message.from_user)

    current_time = time.time()

    if user_id in bot_data['last_milk_time_bull']:
        time_since_last_milk = current_time - bot_data['last_milk_time_bull'][user_id]
        if time_since_last_milk < COOLDOWN_SECONDS:
            remaining_time = int(COOLDOWN_SECONDS - time_since_last_milk)
            minutes = remaining_time // 60
            seconds = remaining_time % 60
            bot.reply_to(message, f"–£—Ö —Ç—ã! üêÇ –ë—ã—á–æ–∫ –µ—â–µ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ—à–ª–æ–≥–æ —Ä–∞–∑–∞. –ï–º—É –Ω—É–∂–Ω–æ –µ—â–µ {minutes} –º–∏–Ω {seconds} —Å–µ–∫.")
            return

    bot_data['last_milk_time_bull'][user_id] = current_time

    sperm_amount = random.randint(0, 15)

    if user_id not in bot_data['user_inventories']:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
        bot_data['user_inventories'][user_id] = {'milk': 0, 'sperm': 0, 'casino_deposits': 0, 'casino_wins': 0, 'casino_losses': 0, 'casino_games_played': 0}
    bot_data['user_inventories'][user_id]['sperm'] += sperm_amount

    save_data(bot_data)

    if sperm_amount > 10:
        bot.reply_to(message, f"–í–ø–µ—á–∞—Ç–ª—è—é—â–µ! üí™ –í—ã '–ø–æ–¥–æ–∏–ª–∏' –±—ã–∫–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ —Ü–µ–ª—ã—Ö {sperm_amount} –ª–∏—Ç—Ä–æ–≤ —ç–ª–∏—Ç–Ω–æ–π —Å–ø–µ—Ä–º—ã! –î–∞ —ç—Ç–æ –∂–µ —Å–æ–∫—Ä–æ–≤–∏—â–µ —Ñ–µ—Ä–º—ã!")
    elif sperm_amount > 0:
        bot.reply_to(message, f"–í—ã '–ø–æ–¥–æ–∏–ª–∏' –±—ã–∫–∞ –∏ –ø–æ–ª—É—á–∏–ª–∏ {sperm_amount} –ª–∏—Ç—Ä–æ–≤ —Å–ø–µ—Ä–º—ã. –î–æ—Å—Ç–æ–π–Ω–æ! üí¶")
    else:
        bot.reply_to(message, f"–£–ø—Å... üò¨ –í—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å '–ø–æ–¥–æ–∏—Ç—å' –±—ã–∫–∞, –Ω–æ –æ–Ω –æ–∫–∞–∑–∞–ª—Å—è –Ω–µ –≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏ –¥–∞–ª –≤—Å–µ–≥–æ {sperm_amount} –ª–∏—Ç—Ä–æ–≤. –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, —Ç–∞–∫–æ–µ –±—ã–≤–∞–µ—Ç!")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /inventory ---
@bot.message_handler(commands=['inventory'])
def show_inventory(message):
    user_id = str(message.from_user.id)
    update_user_display_name(user_id, message.from_user)

    if user_id in bot_data['user_inventories']:
        inventory = bot_data['user_inventories'][user_id]
        milk = inventory.get('milk', 0)
        sperm = inventory.get('sperm', 0)
        casino_games_played = inventory.get('casino_games_played', 0) 
        casino_wins = inventory.get('casino_wins', 0)
        casino_losses = inventory.get('casino_losses', 0)

        bot.reply_to(message, f"–í–∞—à–∞ —Å—Ç–∞—Ç–∞, —Ñ–µ—Ä–º–µ—Ä:\n"
                                f"–ú–æ–ª–æ–∫–æ ü•õ - {milk} –ª\n"
                                f"–°–ø–µ—Ä–º–∞ üí¶ - {sperm} –ª\n"
                                f"–°—ã–≥—Ä–∞–Ω–æ –≤ –∫–∞–∑–∏–∫ üé∞ - {casino_games_played} —Ä–∞–∑\n" 
                                f"–í—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä üëç - {casino_wins} —Ä–∞–∑\n"
                                f"–ü—Ä–æ–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä üëé - {casino_losses} —Ä–∞–∑")
    else:
        bot.reply_to(message, "–í–∞—à–∞ —Å—Ç–∞—Ç–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞! üòî –ù–∞—á–Ω–∏—Ç–µ '–¥–æ–∏—Ç—å' –∫–æ—Ä–æ–≤—É –∏–ª–∏ –±—ã–∫–∞.")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /casino ---
@bot.message_handler(commands=['casino'])
def play_casino(message):
    user_id = str(message.from_user.id)
    update_user_display_name(user_id, message.from_user)

    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –∫–∞–∑–∏–Ω–æ
    if user_id in bot_data['last_casino_time']:
        time_since_last_casino = current_time - bot_data['last_casino_time'][user_id]
        if time_since_last_casino < CASINO_COOLDOWN_SECONDS:
            remaining_time = int(CASINO_COOLDOWN_SECONDS - time_since_last_casino)
            bot.reply_to(message, f"–ü–æ–≥–æ–¥–∏—Ç–µ! ‚è≥ –ö–∞–∑–∏–Ω–æ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã–ª–æ—Å—å –¥–ª—è –≤–∞—Å. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –µ—â—ë {remaining_time} —Å–µ–∫—É–Ω–¥.")
            return

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–≥—Ä—ã –≤ –∫–∞–∑–∏–Ω–æ
    bot_data['last_casino_time'][user_id] = current_time

    if user_id not in bot_data['user_inventories']:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
        bot_data['user_inventories'][user_id] = {'milk': 0, 'sperm': 0, 'casino_deposits': 0, 'casino_wins': 0, 'casino_losses': 0, 'casino_games_played': 0}

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç–∞–≤–∫–∞
    try:
        bet_amount = int(message.text.split()[1])
        if bet_amount <= 0:
            bot.reply_to(message, "–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º! ü§∑‚Äç‚ôÇÔ∏è")
            return
    except (IndexError, ValueError):
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏ –º–æ–ª–æ–∫–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: `/casino 10`")
        return

    user_milk = bot_data['user_inventories'][user_id]['milk']

    if user_milk < bet_amount:
        bot.reply_to(message, f"–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–ª–æ–∫–∞ –¥–ª—è —Ç–∞–∫–æ–π —Å—Ç–∞–≤–∫–∏! –£ –≤–∞—Å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ {user_milk} –ª. ü•õ")
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
    bot_data['user_inventories'][user_id]['milk'] -= bet_amount
    bot_data['user_inventories'][user_id]['casino_deposits'] += bet_amount # –≠—Ç–æ –ø–æ–ª–µ –≤—Å–µ –µ—â–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –≤ –ª–∏—Ç—Ä–∞—Ö
    bot_data['user_inventories'][user_id]['casino_games_played'] += 1 # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∏–≥—Ä

    # --- –ò–ì–†–ê –í –ö–ê–ó–ò–ù–û (–≠–ú–û–î–ó–ò –°–õ–û–¢) ---
    reels = [random.choice(CASINO_SYMBOLS) for _ in range(3)]
    result_str = " ".join(reels)
    winnings = 0
    message_text = f"üé∞ –ö—Ä—É—Ç–∏–º –±–∞—Ä–∞–±–∞–Ω—ã...\n\n{result_str}\n\n"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
    if reels[0] == reels[1] == reels[2]:
        payout_multiplier = CASINO_PAYOUTS.get(tuple(reels), 0)
        if payout_multiplier > 0:
            winnings = bet_amount * payout_multiplier
            message_text += f"üéâ **–¢–†–ò –û–î–ò–ù–ê–ö–û–í–´–•!** –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings} –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞!\n"
        else: # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–µ –ø—Ä–æ–ø–∏—Å–∞–Ω –≤ CASINO_PAYOUTS –¥–ª—è —Ç—Ä–µ—Ö
            winnings = int(bet_amount * 1.5) # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –≤—ã–∏–≥—Ä—ã—à –∑–∞ 3 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω
            message_text += f"ü•≥ **–¢–†–ò –û–î–ò–ù–ê–ö–û–í–´–•!** –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings} –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞!\n"
    # –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ
    elif (reels[0] == reels[1] or
          reels[0] == reels[2] or
          reels[1] == reels[2]):
        winnings = int(bet_amount * 1.5) # –í—ã–∏–≥—Ä—ã—à –≤ 1.5 —Ä–∞–∑–∞ –æ—Ç —Å—Ç–∞–≤–∫–∏
        message_text += f"üëç **–î–í–ï –û–î–ò–ù–ê–ö–û–í–´–•!** –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings} –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞!\n"
    else:
        message_text += "üíî –£–≤—ã, –Ω–∏—á–µ–≥–æ –Ω–µ —Å–æ–≤–ø–∞–ª–æ. –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.\n"

    if winnings > 0:
        bot_data['user_inventories'][user_id]['milk'] += winnings
        bot_data['user_inventories'][user_id]['casino_wins'] += 1 # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –≤—ã–∏–≥—Ä—ã—à–µ–π
    else:
        bot_data['user_inventories'][user_id]['casino_losses'] += 1 # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π


    message_text += f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {bot_data['user_inventories'][user_id]['milk']} –ª. ü•õ"
    bot.reply_to(message, message_text, parse_mode='Markdown')

    save_data(bot_data)


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /leaders ---
@bot.message_handler(commands=['leaders'])
def show_leaders(message):
    leaderboard_milk = []
    leaderboard_sperm = []
    leaderboard_most_wins = [] # –î–ª—è —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥

    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤
    for user_id, inventory in bot_data['user_inventories'].items():
        display_name = bot_data['user_display_names'].get(user_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_{user_id}")
        milk = inventory.get('milk', 0)
        sperm = inventory.get('sperm', 0)
        
        casino_wins_count = inventory.get('casino_wins', 0) # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥
        
        leaderboard_milk.append({'display_name': display_name, 'amount': milk})
        leaderboard_sperm.append({'display_name': display_name, 'amount': sperm})
        leaderboard_most_wins.append({'display_name': display_name, 'amount': casino_wins_count}) # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –∫–∞–∑–∏–Ω–æ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    leaderboard_milk.sort(key=lambda x: x['amount'], reverse=True)
    leaderboard_sperm.sort(key=lambda x: x['amount'], reverse=True)
    leaderboard_most_wins.sort(key=lambda x: x['amount'], reverse=True) # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤—ã–∏–≥—Ä—ã—à–µ–π

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–æ–ª–æ–∫–∞
    milk_leaders_text = "üèÜ **–¢–û–ü-10 –§–µ—Ä–º–µ—Ä–æ–≤ –ø–æ –ú–æ–ª–æ–∫—É** ü•õ\n"
    if not leaderboard_milk or leaderboard_milk[0]['amount'] == 0:
        milk_leaders_text += "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–æ–∏–ª –Ω–∏ –∫–∞–ø–ª–∏ –º–æ–ª–æ–∫–∞. –ë—É–¥—å –ø–µ—Ä–≤—ã–º! üåü"
    else:
        for i, entry in enumerate(leaderboard_milk[:10]):
            rank = i + 1
            milk_leaders_text += f"{rank}. {entry['display_name']}: {entry['amount']} –ª\n"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å–ø–µ—Ä–º—ã
    sperm_leaders_text = "\n\nüí¶ **–¢–û–ü-10 –ê—Å–æ–≤ –ø–æ –°–ø–µ—Ä–º–µ** üêÇ\n"
    if not leaderboard_sperm or leaderboard_sperm[0]['amount'] == 0:
        sperm_leaders_text += "–ó–¥–µ—Å—å –ø–æ–∫–∞ –ø—É—Å—Ç–æ. –°—Ç–∞–Ω—å –ª–µ–≥–µ–Ω–¥–æ–π! üî•"
    else:
        for i, entry in enumerate(leaderboard_sperm[:10]):
            rank = i + 1
            sperm_leaders_text += f"{rank}. {entry['display_name']}: {entry['amount']} –ª\n"

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–∑–∏–Ω–æ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–±–µ–¥)
    casino_leaders_text = "\n\nüé∞ **–¢–û–ü-10 –£–¥–∞—á–ª–∏–≤—ã—Ö –ò–≥—Ä–æ–∫–æ–≤ –ö–∞–∑–∏–Ω–æ** üçÄ\n"
    if not leaderboard_most_wins or leaderboard_most_wins[0]['amount'] == 0:
        casino_leaders_text += "–ù–∏–∫—Ç–æ –µ—â–µ –Ω–µ —Å–æ—Ä–≤–∞–ª –∫—É—à –≤ –∫–∞–∑–∏–Ω–æ. –ú–æ–∂–µ—Ç, —Ç—ã –ø–µ—Ä–≤—ã–π? ‚ú®"
    else:
        for i, entry in enumerate(leaderboard_most_wins[:10]):
            rank = i + 1
            casino_leaders_text += f"{rank}. {entry['display_name']}: {entry['amount']} –ø–æ–±–µ–¥\n"

    bot.reply_to(message, milk_leaders_text + sperm_leaders_text + casino_leaders_text, parse_mode='Markdown')


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.polling(none_stop=True)
